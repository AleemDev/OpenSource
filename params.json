{"name":"Opensource","tagline":"OpenSource Contrib Apps","body":"Open Source Codeigniter Survey Library\r\n==========\r\n\r\nOpenSource Contrib Survey App is a Codeigniter library to create and monitor web surveys. Its easy to install and use.\r\n\r\nInstallation\r\n\r\n1. Copy application/libraries/contribsurvey.php to your codeigniter file system.\r\n2. Get api key from http://www.developers.contrib.com \r\n3. In your controller, pass your api key when calling the contrib survey library.\r\n   $this->load->library('contribsurvey',array(\"key\"=>\"xxxxxxxxxxxxxxxx\"));\r\n\r\nContrib Survey Library Function Documentation\r\n\r\n1. authenticate - authenticates user to use contrib survey application <br>\r\n  return:<br>\r\n        true (if authentication success)  <br>\r\n        false (if authentication failed)<br>\r\n            \r\n2. gettemplates - get all survey templates<br>\r\n  return:<br>\r\n        array of template php filenames e.g array('AskPeopleDefault.php','CorporateBoxes.php','Floral.php',...)<br>\r\n\r\n3. getqtypes - get all question types<br>\r\n  return:<br>\r\n        array of question types e.g. array('single','dropdown','multi',...) <br>\r\n\r\n4. createsurvey - create new survey<br>\r\n  parameter: <br> \r\n        template - (required) template filename<br>\r\n        title - (required) title of survey<br>\r\n  return:<br>\r\n        array('success'=>true, 'sid'=>'xxxxx') - if survey created successfully<br>\r\n        array('success'=>false) - if failed<br>\r\n  possible error:<br>\r\n        array('error'=> array('title parameter required','template parameter required')<br>\r\n        \r\n5. getsurveys - get all the list or surveys created<br>\r\n  return:<br>\r\n        array of survey id and title details e.g   array('sid'=>'xxxxx','title'=>'xxxxx','template'=>'Floral.php')<br>\r\n             \r\n6. addquestion - add a question in a survey<br>\r\n  parameter:<br>\r\n        sid - (required) survey id<br>\r\n        qtype - (required)  question type (single, dropdown, multi,bigbox, smallbox,pagebreak, info)<br>\r\n        qvalid - (required) validation (optional, required)<br>\r\n        question - (required) survey question text<br>\r\n        options - (required for Single/Dropdown/Multi question type) choices for question separated by (|)<br>\r\n                  e.g. (a.Red|b.Blue|c.Green|d.Black)<br>        \r\n  return:<br>\r\n        true - if success<br>\r\n        false - if failed<br>\r\n   possible error:<br>\r\n        array('error'=> array('invalid sid',\r\n                              'sid parameter required',\r\n                              'qtype parameter required',\r\n                              'qvalid parameter required',\r\n                              'question parameter required'\r\n                        )<br>\r\n\r\n7. getquestions - get all questions in a survey<br>\r\n  parameter:<br>\r\n        sid - (required) survey id<br>\r\n  return:<br>\r\n        array of question details object      <br>\r\n        e.g array(1) {\r\n        [0]=>\r\n        object(stdClass)#16 (6) {\r\n          [\"questionid\"]=>;\r\n          string(1) \"1\"\r\n          [\"type\"]=>\r\n          string(6) \"single\"\r\n          [\"validation\"]=>\r\n          string(8) \"optional\"\r\n          [\"questiontext\"]=>\r\n          string(28) \"What is your favorite color?\"\r\n          [\"options\"]=>\r\n          object(stdClass)#17 (4) {\r\n            [\"a.Red\"]=>\r\n            string(5) \"a.Red\"\r\n            [\"b.Blue\"]=>\r\n            string(6) \"b.Blue\"\r\n            [\"c.Green\"]=>\r\n            string(7) \"c.Green\"\r\n            [\"d.Black\"]=>\r\n            string(7) \"d.Black\"\r\n          }\r\n          [\"scale\"]=>\r\n          NULL\r\n        }<br>\r\n  possible error:<br>\r\n        array('error'=> array('invalid sid')<br>\r\n             \r\n8. editsurvey - edit survey details<br>\r\n  parameter:<br>\r\n        sid - (required) survey id<br>\r\n        title - (required) new survey title<br>\r\n        template - (optional) template filename<br>\r\n  return:<br>\r\n        true - if edit successful<br>\r\n        false - if failed<br>\r\n  possible error:<br>\r\n        array('error'=> array('invalid sid','sid parameter required','title parameter required')<br>\r\n\r\n9. editquestion - edit question in a survey<br>\r\n  parameter:<br>\r\n        sid - (required) survey id<br>\r\n        qid - (required) question id<br>\r\n        qtype - (required)  question type (single, dropdown, multi,bigbox, smallbox,pagebreak, info)<br>\r\n        qvalid - (required) validation (optional, required)<br>\r\n        question - (required) survey question text<br>\r\n        options - (required for Single/Dropdown/Multi question type) choices for question separated by (|)<br>\r\n                  e.g. (a.Red|b.Blue|c.Green|d.Black)<br>\r\n  return:<br>\r\n        true - if edit successful<br>\r\n        false - if failed<br>\r\n        \r\n  possible error:<br>\r\n        array('error'=> array('invalid sid','invalid qid','sid parameter required','title parameter required')<br>\r\n\r\n\r\n10. deletequestion - delete a question in a survey<br>\r\n  parameter:<br>\r\n        sid - (required) survey id<br>\r\n        qid - (required) question id<br>\r\n  return:<br>\r\n        true - if delete successful<br>\r\n        false - if failed<br>\r\n  possible error:<br>\r\n        array('error'=> array('invalid sid','invalid qid','sid parameter required','qid parameter required')<br>\r\n\r\n11. deletesurvey - delete survey<br>\r\n  parameter:<br>\r\n        sid - (required) survey id<br>\r\n  return:<br>\r\n        true - if delete successful<br>\r\n        false - if failed<br>\r\n  possible error:<br>\r\n        array('error'=> array('invalid sid','sid parameter required')<br>\r\n\r\n12. getreport - get statistics/report of a survey<br>\r\n  parameter:<br>\r\n        sid - (required) survey id<br>\r\n        qid - (optional) question id, default is 'all'<br>\r\n  return:<br>\r\n        array of question and answer details object<br>\r\n        e.g <br>\r\n    array(1) {\r\n    [0]=>\r\n    object(stdClass)#16 (5) {\r\n      [\"questionid\"]=>\r\n      string(1) \"1\"\r\n      [\"questiontext\"]=>\r\n      string(28) \"What is your favorite color?\"\r\n      [\"answered\"]=>\r\n      int(4)\r\n      [\"total\"]=>\r\n      int(4)\r\n      [\"stats\"]=>\r\n      array(4) {\r\n        [0]=>\r\n        object(stdClass)#17 (3) {\r\n          [\"option\"]=>\r\n          string(5) \"a.Red\"\r\n          [\"total\"]=>\r\n          int(2)\r\n          [\"percent\"]=>\r\n          string(3) \"50%\"\r\n        }\r\n        [1]=>\r\n        object(stdClass)#18 (3) {\r\n          [\"option\"]=>\r\n          string(6) \"b.Blue\"\r\n          [\"total\"]=>\r\n          NULL\r\n          [\"percent\"]=>\r\n          NULL\r\n        }\r\n        [2]=>\r\n        object(stdClass)#19 (3) {\r\n          [\"option\"]=>\r\n          string(7) \"c.Green\"\r\n          [\"total\"]=>\r\n          NULL\r\n          [\"percent\"]=>\r\n          NULL\r\n        }\r\n        [3]=>\r\n        object(stdClass)#20 (3) {\r\n          [\"option\"]=>\r\n          string(7) \"d.Black\"\r\n          [\"total\"]=>\r\n          NULL\r\n          [\"percent\"]=>\r\n          NULL\r\n        }\r\n      }\r\n    }         \r\n   } \r\n   \r\n  possible error:<br>\r\n        array('error'=> array('invalid sid')<br>\r\n           \r\nList of general errors\r\n   \r\n    array('error'=> array(\r\n      'Api key required',\r\n      'Invalid api key',\r\n      'Request not allowed'\r\n    )\t  \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}